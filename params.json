{"name":"Android-log","tagline":"android lib - log","body":"#android-log\r\n[![Build Status](https://travis-ci.org/SnowdreamFramework/android-log.svg?branch=master)](https://travis-ci.org/SnowdreamFramework/android-log)\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.snowdream.android.util/log/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.snowdream.android.util/log)\r\n[![GITHUB](https://img.shields.io/github/issues/badges/android-log.svg)](https://github.com/SnowdreamFramework/android-log/issues)\r\n[![LICENSE](https://img.shields.io/hexpm/l/plug.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\r\n\r\n[![Pledgie](https://pledgie.com/campaigns/27475.png)](https://pledgie.com/campaigns/27475)\r\n\r\n##Introduction\r\nandroid lib - log\r\n\r\n##System requirements\r\nAndroid 2.2+\r\n\r\n##Permission requirements\r\n```xml\r\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n```\r\n\r\n##Dependencies\r\nApache commons-lang3   [http://commons.apache.org/proper/commons-lang/](http://commons.apache.org/proper/commons-lang/)\r\n\r\n##Download\r\ngrab via Maven:\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>com.github.snowdream.android.util</groupId>\r\n  <artifactId>log</artifactId>\r\n  <version>1.1.0</version>\r\n</dependency>\r\n```\r\n\r\nor Gradle:\r\n```groovy\r\n    compile 'com.github.snowdream.android.util:log:1.1.0'\r\n```\r\n\r\n##Docs\r\n[http://snowdreamframework.github.io/android-log/docs/1.1.0/javadoc/](http://snowdreamframework.github.io/android-log/docs/1.1.0/javadoc/)\r\n\r\n##Usage\r\n1.enable/disable log  \r\n```java\r\nLog.setEnabled(true);  \r\nLog.setEnabled(false);  \r\n```\r\n\r\n2.enable/disable log to console\r\n```java\r\nLog.setLog2ConsoleEnabled(true);\r\nLog.setLog2ConsoleEnabled(false);\r\n```\r\n\r\n3.enable/disable log to file\r\n```java\r\nLog.setLog2FileEnabled(true);\r\nLog.setLog2FileEnabled(false);\r\n```\r\n\r\n4.set the global Tag for the log\r\n```java\r\nLog.setGlobalTag(\"Android\");\r\n```\r\n\r\n5.log simple\r\n```java\r\nLog.d(\"test\");  \r\nLog.v(\"test\");  \r\nLog.i(\"test\");  \r\nLog.w(\"test\");  \r\nLog.e(\"test\");  \r\n```\r\n\r\n6.log simple -- set custom tag\r\n```java\r\nLog.d(\"TAG\",\"test\");  \r\nLog.v(\"TAG\",\"test\");  \r\nLog.i(\"TAG\",\"test\");  \r\nLog.w(\"TAG\",\"test\");  \r\nLog.e(\"TAG\",\"test\");  \r\n```\r\n\r\n7.log advance\r\n```java\r\nLog.d(\"test\",new Throwable(\"test\"));  \r\nLog.v(\"test\",new Throwable(\"test\"));  \r\nLog.i(\"test\",new Throwable(\"test\"));  \r\nLog.w(\"test\",new Throwable(\"test\"));  \r\nLog.e(\"test\",new Throwable(\"test\"));  \r\n```\r\n\r\n8.log advance  -- set custom tag\r\n```java\r\nLog.d(\"TAG\",\"test\",new Throwable(\"test\"));  \r\nLog.v(\"TAG\",\"test\",new Throwable(\"test\"));  \r\nLog.i(\"TAG\",\"test\",new Throwable(\"test\"));  \r\nLog.w(\"TAG\",\"test\",new Throwable(\"test\"));  \r\nLog.e(\"TAG\",\"test\",new Throwable(\"test\"));  \r\n```\r\n\r\n9.Log to File\r\n\r\nlog into one file with FilePathGenerator\r\n```java\r\nLog.setFilePathGenerator(new FilePathGenerator.DefaultFilePathGenerator(\"/mnt/sdcard/\",\"app\",\".log\"));\r\n//Log.setFilePathGenerator(new FilePathGenerator.DefaultFilePathGenerator(context,\"app\",\".log\"));\r\n//Log.setFilePathGenerator(new FilePathGenerator.DateFilePathGenerator(\"/mnt/sdcard/\",\"app\",\".log\"));\r\n//Log.setFilePathGenerator(new FilePathGenerator.LimitSizeFilePathGenerator(\"/mnt/sdcard/\",\"app\",\".log\",10240));\r\n\r\nLog.d(\"test 1\");\r\nLog.v(\"test 2\");\r\nLog.i(\"test 3\");\r\nLog.w(\"test 4\");\r\nLog.e(\"test 5\");\r\n```\r\n\r\nlog into one file with LogFilter\r\n```java\r\nLog.setFilePathGenerator(new FilePathGenerator.DefaultFilePathGenerator(\"/mnt/sdcard/\",\"app\",\".log\"));\r\n\r\nLog.addLogFilter(new LogFilter.LevelFilter(Log.LEVEL.DEBUG));\r\n//Log.addLogFilter(new LogFilter.TagFilter(TAG));\r\n//Log.addLogFilter(new LogFilter.ContentFilter(CUSTOM_TAG));\r\n\r\n\r\nLog.d(\"test 1\");\r\nLog.v(\"test 2\");\r\nLog.i(\"test 3\");\r\nLog.w(\"test 4\");\r\nLog.e(\"test 5\");\r\n```\r\n\r\nlog into one file with LogFormatter\r\n```java\r\nLog.setFilePathGenerator(new FilePathGenerator.DefaultFilePathGenerator(\"/mnt/sdcard/\",\"app\",\".log\"));\r\n\r\nLog.addLogFilter(new LogFilter.LevelFilter(Log.LEVEL.DEBUG));\r\n\r\nLog.setLogFormatter(new LogFormatter.EclipseFormatter());\r\n//Log.setLogFormatter(new LogFormatter.IDEAFormatter());\r\n\r\nLog.d(\"test 1\");\r\nLog.v(\"test 2\");\r\nLog.i(\"test 3\");\r\nLog.w(\"test 4\");\r\nLog.e(\"test 5\");\r\n```\r\n\r\n##License\r\n```\r\nCopyright (C) 2013 Snowdream Mobile <yanghui1986527@gmail.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}